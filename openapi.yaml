openapi: 3.0.0
info:
  title: pione-api
  description: Um projeto para automação residencial
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/cesarjhony/pione/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://pione.local/api
  description: Optional server description, e.g. Internal staging server for testing
paths:
  /carga/conf/all:
    get:
      tags:
      - Carga
      - Conf
      description: Pede a configuração de todas as cargas
      operationId: server:get:api.carga.conf.all
      responses:
        "200":
          description: Retorna uma array com a configuração de todas as Cargas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
        default:
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/conf/allpure:
    get:
      tags:
      - Carga
      - Conf
      description: Pede a configuração de todas as cargas
      operationId: server:get:api.carga.conf.allpure
      responses:
        "200":
          description: Retorna uma array com a configuração de todas as Cargas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/conf/atualizar/{id}:
    post:
      tags:
      - Carga
      - Conf
      description: Atualiza um registro de carga pelo ID fornecido
      operationId: server:post:api.carga.conf.atualizar::id
      parameters:
      - name: id
        in: path
        description: Id da carga a ser atualizada
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: Retorna a carga do BD já registrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/conf/registrar:
    post:
      tags:
      - Carga
      - Conf
      description: Registra uma carga
      operationId: server:post:api.carga.conf.registrar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "200":
          description: Retorna a carga do BD já registrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/comando/historico:
    get:
      tags:
      - Carga
      - Historico
      description: Pede os últimos registros do histórico
      operationId: server:get:api.carga.comando.historico
      responses:
        "200":
          description: Retorna uma array de histórico
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_3'
        default:
          description: Erro inesperado, erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/read/{cargaId}:
    get:
      tags:
      - Carga
      - Read
      description: Pede o estado da carga pelo Id
      operationId: server:get:api.carga.read::cargaId
      parameters:
      - name: cargaId
        in: path
        description: Id da carga a ser lida
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: with_prop
        in: query
        description: propriedade na carga.conf['propriedade'], será adicionada no
          objeto da carga solicitada, é possível pedir mais de uma propriedade
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/with_prop'
      responses:
        "200":
          description: Retorna o estado da carga
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
              examples:
                desligada:
                  value:
                    carga: 5
                    value: 0
                ligada:
                  value:
                    carga: 1
                    value: 1
                    name: Banheiro-LuzPrincipal
                leituraInvalida:
                  value:
                    carga: 12
                    value: -1
        "400":
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/read/all:
    get:
      tags:
      - Carga
      - Read
      description: Pede o estado de todas as carga
      operationId: server:get:api.carga.read.all
      parameters:
      - name: with_prop
        in: query
        description: propriedade na carga.conf['propriedade'], será adicionada no
          objeto da carga solicitada, é possível pedir mais de uma propriedade
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/with_prop_1'
      responses:
        "200":
          description: Retorna o estado da carga
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Objeto com chaves 'carga', 'value' e propriedades adicionais,
                    onde cada propriedade adicional é pedida pelos parâmetros de with_prop
                    e buscada em 'conf' de cada carga do BD
                  allOf:
                  - $ref: '#/components/schemas/CargaReadData'
                  - type: object
                    additionalProperties:
                      anyOf:
                      - type: string
                      - type: integer
                      - type: object
        "500":
          description: Erro inesperado, erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/comando/pulse:
    post:
      tags:
      - Carga
      - Comando
      description: Pulsa as cargas solicitadas
      operationId: server:post:api.carga.comando.pulse
      requestBody:
        $ref: '#/components/requestBodies/pulseDataAndItsArray'
      responses:
        "200":
          description: Retorna OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resOk'
        "400":
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/comando/ligar:
    post:
      tags:
      - Carga
      - Comando
      description: Pulsa as cargas solicitadas
      operationId: server:post:api.carga.comando.ligar
      requestBody:
        $ref: '#/components/requestBodies/pulseDataAndItsArray'
      responses:
        "200":
          description: Retorna OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resOk'
        "400":
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/comando/desligar:
    post:
      tags:
      - Carga
      - Comando
      description: Desliga as cargas solicitadas
      operationId: server:post:api.carga.comando.desligar
      requestBody:
        $ref: '#/components/requestBodies/pulseDataAndItsArray'
      responses:
        "200":
          description: Retorna OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resOk'
        "400":
          description: Retorna uma mensagem de erro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
  /carga/comando/desligar/todas:
    post:
      tags:
      - Carga
      - Comando
      description: Desliga todas as cargas registradas no sistema
      operationId: server:post:api.carga.comando.desligar.todas
      responses:
        "200":
          description: Retorna OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resOk'
        "500":
          description: Erro inesperado, erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resError'
components:
  schemas:
    CargaReadData:
      type: object
      properties:
        carga:
          type: integer
          description: id da carga
        value:
          type: number
          description: Respostas possíveis -1, 0 ou 1, onde -1 é leitura inválida;
            0 é carga Desligada, 1 é carga Ligada
          enum:
          - -1
          - 0
          - 1
      example:
        carga: 12
        value: -1
    resOk:
      type: object
      properties:
        res:
          type: string
          description: Resposta padrão onde há sucesso na requisição e/ou é uma solicitação
            asincrona.
          enum:
          - OK
    resError:
      type: object
      properties:
        error:
          type: string
          description: Mensagem do erro
          example: Não foi possivel executar a solicitação devido a A e B
    pulseData:
      required:
      - pulse
      type: object
      properties:
        pulse:
          $ref: '#/components/schemas/pulseData_pulse'
        pulsePeriod:
          type: integer
          description: Tempo de duração do pulso em milisegundos
          example: 1000
      example:
        pulse:
          carga: 0
    arrayOfPulseData:
      type: array
      example:
      - pulse:
          carga: 7
      - pulse:
          carga: 3
        pulsePeriod: 1000
      items:
        $ref: '#/components/schemas/pulseData'
    pinController:
      type: string
      description: |
        Hardware do pino, e uso do seu respectivo controlador:
         * `DIRECT_GPIO` - Hardware e controlador para o próprio raspberry
         * `EXPANSOR_MCP23017_*` - Hardware e controlador para a expansora de portas com o ID de I2C respectivo ao seu sufixo, seu endereço ficando (0b0100000 + (ID - 1))
         * `EXPANSOR_MCP23017_1` - Hardware e controlador para a primeira expansora de portas, possui o código I2C zerado (0b0100000)
         * `EXPANSOR_MCP23017_THIRD` - Hardware e controlador para a terceira expansora de portas, possui o código I2C +2 (0b0100010)
         * `EXPANSOR_MCP23017_7` - Hardware e controlador para a terceira expansora de portas, possui o código I2C +6 (0b0100110)
         * `EXPANSOR_MCP23017_8` - Hardware e controlador para a terceira expansora de portas, possui o código I2C +7 (0b0100111)
      enum:
      - DIRECT_GPIO
      - EXPANSOR_MCP23017_FIRST
      - EXPANSOR_MCP23017_SECOND
      - EXPANSOR_MCP23017_THIRD
      - EXPANSOR_MCP23017_1
      - EXPANSOR_MCP23017_2
      - EXPANSOR_MCP23017_3
      - EXPANSOR_MCP23017_4
      - EXPANSOR_MCP23017_5
      - EXPANSOR_MCP23017_6
      - EXPANSOR_MCP23017_7
      - EXPANSOR_MCP23017_8
    cargaConf:
      required:
      - id
      - name
      - readPinConf
      - writePinConf
      type: object
      properties:
        id:
          type: string
          description: Deve ser o mesmo id da carga
          format: integer
        name:
          type: string
          description: Nome da lampada completo, composta por nome do cômodo e o nome
            da lâmpada
          format: roomName-lampName
          example: Cozinha-LuzPrincipal
        readPinConf:
          $ref: '#/components/schemas/cargaConf_readPinConf'
        writePinConf:
          $ref: '#/components/schemas/cargaConf_writePinConf'
    LightingSummary:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/LightingZone'
        zoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/LightingZoneStatus'
      description: ok
    LightingZone:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        deviceId:
          type: integer
          format: int32
        deviceType:
          type: string
          enum:
          - dimmer
          - switch
        zone:
          type: string
    LightingZoneStatus:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastUpdate:
          type: string
          format: date-time
        level:
          type: integer
          format: int32
      description: the status of the lighting zone.
    TemperatureSummary:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/TemperatureZone'
        zoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TemperatueZoneStatus'
      description: ok
    TemperatureZone:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: the unique identifier for the zone
          format: int32
        name:
          type: string
        inputPosition:
          type: integer
          format: int32
        outputPosition:
          type: integer
          format: int32
        zone:
          type: string
      description: a single temperature zone
    TemperatueZoneStatus:
      required:
      - id
      - timestamp
      - value
      type: object
      properties:
        id:
          type: string
          description: the unique identifier for the zone
        name:
          type: string
          description: the name of the zone
        value:
          type: number
          description: the temperature in the zone
          format: double
        units:
          type: string
          description: the temperature units
          default: fahrenheit
          enum:
          - celsius
          - fahrenheit
        timestamp:
          type: string
          description: the timestamp when the temperature was measured
          format: date-time
      description: status of a single zone
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          example: everything is ok
    HeaterState:
      type: object
      properties:
        id:
          type: string
        state:
          type: string
    DeviceState:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastUpdate:
          type: string
          format: date-time
        level:
          type: integer
          format: int32
    ForecastResponse:
      type: object
      properties:
        city:
          $ref: '#/components/schemas/City'
        values:
          type: array
          items:
            $ref: '#/components/schemas/Forecast'
    Forecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        pressure:
          type: number
          format: double
        humidity:
          type: integer
          format: int32
        windSpeed:
          type: number
          format: double
        clouds:
          type: integer
          format: int32
        temperature:
          $ref: '#/components/schemas/ForecastTemperature'
        weather:
          $ref: '#/components/schemas/WeatherForecast'
    City:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
        country:
          type: string
    ForecastTemperature:
      type: object
      properties:
        low:
          type: number
          format: double
        high:
          type: number
          format: double
        morning:
          type: number
          format: double
        day:
          type: number
          format: double
        evening:
          type: number
          format: double
        night:
          type: number
          format: double
    WeatherForecast:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        icon:
          type: string
    DeviceRegistrationInfo:
      type: object
      properties:
        uri:
          type: string
          format: uri
          example: http://10.0.0.220:8080
        id:
          type: string
          format: uuid
          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b
    inline_response_200:
      type: object
      properties:
        id:
          type: integer
          description: Id da Carga
        conf:
          $ref: '#/components/schemas/cargaConf'
    inline_response_200_1:
      type: object
      properties:
        id:
          type: integer
          description: Id da Carga
        conf:
          type: string
          description: Configuração da carga no formato de string
          format: cargaConf
    body:
      type: object
      properties:
        id:
          type: integer
          description: Id da Carga
        conf:
          oneOf:
          - type: string
            description: Configuração da carga no formato de string
            format: cargaConf
          - $ref: '#/components/schemas/cargaConf'
    body_1:
      type: object
      properties:
        id:
          type: integer
          description: Id da Carga
        conf:
          oneOf:
          - type: string
            description: Configuração da carga no formato de string
            format: cargaConf
          - $ref: '#/components/schemas/cargaConf'
    inline_response_200_2:
      required:
      - conf
      - id
      type: object
      properties:
        id:
          type: integer
          description: Id da Carga
        conf:
          type: string
          description: Configuração da carga no formato de string
          format: cargaConf
    inline_response_200_3:
      type: object
      properties:
        tipo:
          type: string
          description: |
            Tipo de registro:
             * `comando` - Registro do tipo comando, são ações através do sistema de automação
             * `trocaDeEstado` - Registro do tipo troca de estado, são registros que mostram a troca de estados de Cargas
             * `evento` - Registro sem tipo específico, são registros de outros eventos
          enum:
          - comando
          - trocaDeEstado
          - evento
        registro:
          type: object
    with_prop:
      anyOf:
      - type: string
      - type: array
        items:
          type: string
    inline_response_200_4:
      description: Retorna um objeto com chaves 'carga', 'value' e propriedades adicionais,
        onde cada propriedade adicional é pedida pelos parâmetros de with_prop e buscada
        em 'conf' de cada carga do BD
      allOf:
      - $ref: '#/components/schemas/CargaReadData'
      - type: object
        additionalProperties:
          anyOf:
          - type: string
          - type: integer
          - type: object
    with_prop_1:
      anyOf:
      - type: string
      - type: array
        items:
          type: string
    pulseData_pulse:
      required:
      - carga
      type: object
      properties:
        carga:
          description: Id da carga, a partir de 0, zero inclusive
          example: "12"
          oneOf:
          - type: string
            format: integer
          - type: integer
        timer:
          type: integer
          description: Tempo de espera antes da carga ser acionada, em segundos
    cargaConf_readPinConf:
      required:
      - pinController
      - readInvert
      - readPin
      type: object
      properties:
        pinController:
          $ref: '#/components/schemas/pinController'
        readPin:
          description: Código do pino, se for MCP será B2 por exemplo
          oneOf:
          - type: number
          - type: string
        readInvert:
          type: string
          description: Deve ser o mesmo id da carga
          format: boolean
          enum:
          - "true"
          - "false"
    cargaConf_writePinConf:
      required:
      - pinController
      - writePin
      - writePinOffMode
      - writePinOffState
      type: object
      properties:
        pinController:
          $ref: '#/components/schemas/pinController'
        writePin:
          type: string
        writePinOffState:
          type: string
        writePinOffMode:
          type: string
  responses:
    resOk:
      description: Retorna OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/resOk'
    resError:
      description: Retorna uma mensagem de erro
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/resError'
    resErrorInternal:
      description: Erro inesperado, erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/resError'
  requestBodies:
    pulseDataAndItsArray:
      content:
        application/json:
          schema:
            example:
            - pulse:
                carga: 7
            - pulse:
                carga: 3
              pulsePeriod: 1000
            oneOf:
            - $ref: '#/components/schemas/pulseData'
            - $ref: '#/components/schemas/arrayOfPulseData'
